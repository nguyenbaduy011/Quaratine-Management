--1. Trigger để kiểm tra không trùng MACS
CREATE OR REPLACE FUNCTION trg_insert_MACS_function()
RETURNS TRIGGER AS $$
BEGIN
    IF EXISTS (SELECT 1 FROM CSYT WHERE MACS = NEW.MACS) THEN
        RAISE EXCEPTION 'MACS đã tồn tại';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_insert_MACS
BEFORE INSERT ON CSYT
FOR EACH ROW
EXECUTE FUNCTION trg_insert_MACS_function();


--2. Trigger để kiểm tra không trùng MABS
CREATE OR REPLACE FUNCTION trg_insert_BACSI_function()
RETURNS TRIGGER AS $$
BEGIN
    IF EXISTS (SELECT 1 FROM BACSI WHERE MABS = NEW.MABS) THEN
        RAISE EXCEPTION 'MABS đã tồn tại';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_insert_BACSI
BEFORE INSERT ON BACSI
FOR EACH ROW
EXECUTE FUNCTION trg_insert_BACSI_function();

--3. Trigger để kiểm tra không trùng MABN
CREATE OR REPLACE FUNCTION trg_insert_BENHNHAN_function()
RETURNS TRIGGER AS $$
BEGIN
    IF EXISTS (SELECT 1 FROM BENHNHAN WHERE MABN = NEW.MABN) THEN
        RAISE EXCEPTION 'MABN đã tồn tại';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_insert_BENHNHAN
BEFORE INSERT ON BENHNHAN
FOR EACH ROW
EXECUTE FUNCTION trg_insert_BENHNHAN_function();

--4. Trigger để kiểm tra không trùng MABP
CREATE OR REPLACE FUNCTION trg_insert_BPQL_function()
RETURNS TRIGGER AS $$
BEGIN
    IF EXISTS (SELECT 1 FROM BPQL WHERE MABP = NEW.MABP) THEN
        RAISE EXCEPTION 'MABP đã tồn tại';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_insert_BPQL
BEFORE INSERT ON BPQL
FOR EACH ROW
EXECUTE FUNCTION trg_insert_BPQL_function();

--5. Trigger để kiểm tra không trùng MACB
CREATE OR REPLACE FUNCTION trg_insert_CANBONV_function()
RETURNS TRIGGER AS $$
BEGIN
    IF EXISTS (SELECT 1 FROM CANBONV WHERE MACB = NEW.MACB) THEN
        RAISE EXCEPTION 'MACB đã tồn tại';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_insert_CANBONV
BEFORE INSERT ON CANBONV
FOR EACH ROW
EXECUTE FUNCTION trg_insert_CANBONV_function();

--6. Trigger để kiểm tra không trùng MACV
CREATE OR REPLACE FUNCTION trg_insert_CHUCVU_function()
RETURNS TRIGGER AS $$
BEGIN
    IF EXISTS (SELECT 1 FROM CHUCVU WHERE MACV = NEW.MACV) THEN
        RAISE EXCEPTION 'MACV đã tồn tại';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_insert_CHUCVU
BEFORE INSERT ON CHUCVU
FOR EACH ROW
EXECUTE FUNCTION trg_insert_CHUCVU_function();

--7. Trigger để kiểm tra không trùng MATHIETBI
CREATE OR REPLACE FUNCTION trg_insert_CSVC_function()
RETURNS TRIGGER AS $$
BEGIN
    IF EXISTS (SELECT 1 FROM CSVC WHERE MATHIETBI = NEW.MATHIETBI) THEN
        RAISE EXCEPTION 'MATHIETBI đã tồn tại';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_insert_CSVC
BEFORE INSERT ON CSVC
FOR EACH ROW
EXECUTE FUNCTION trg_insert_CSVC_function();

--8. Trigger để kiểm tra không trùng MAKHOA
CREATE OR REPLACE FUNCTION trg_insert_KHOA_function()
RETURNS TRIGGER AS $$
BEGIN
    IF EXISTS (SELECT 1 FROM KHOA WHERE MAKHOA = NEW.MAKHOA) THEN
        RAISE EXCEPTION 'MAKHOA đã tồn tại';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_insert_KHOA
BEFORE INSERT ON KHOA
FOR EACH ROW
EXECUTE FUNCTION trg_insert_KHOA_function();

--9. Trigger để kiểm tra không trùng MAKHU
CREATE OR REPLACE FUNCTION trg_insert_KHUCACHLY_function()
RETURNS TRIGGER AS $$
BEGIN
    IF EXISTS (SELECT 1 FROM KHUCACHLY WHERE MAKHU = NEW.MAKHU) THEN
        RAISE EXCEPTION 'MAKHU đã tồn tại';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_insert_KHUCACHLY
BEFORE INSERT ON KHUCACHLY
FOR EACH ROW
EXECUTE FUNCTION trg_insert_KHUCACHLY_function();

--10. Trigger để kiểm tra không trùng MAKV
CREATE OR REPLACE FUNCTION trg_insert_KHUVUC_function()
RETURNS TRIGGER AS $$
BEGIN
    IF EXISTS (SELECT 1 FROM KHUVUC WHERE MAKV = NEW.MAKV) THEN
        RAISE EXCEPTION 'MAKV đã tồn tại';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_insert_KHUVUC
BEFORE INSERT ON KHUVUC
FOR EACH ROW
EXECUTE FUNCTION trg_insert_KHUVUC_function();

--11. Trigger để kiểm tra không trùng MATNV
CREATE OR REPLACE FUNCTION trg_insert_TNV_function()
RETURNS TRIGGER AS $$
BEGIN
    IF EXISTS (SELECT 1 FROM TNV WHERE MATNV = NEW.MATNV) THEN
        RAISE EXCEPTION 'MATNV đã tồn tại';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_insert_TNV
BEFORE INSERT ON TNV
FOR EACH ROW
EXECUTE FUNCTION trg_insert_TNV_function();

--12. Trigger kiểm tra thời gian cách ly
CREATE OR REPLACE FUNCTION trg_check_quarantine_time()
RETURNS TRIGGER AS $$
BEGIN
    IF NEW.TGKTCACHLY - NEW.TGBDCACHLY != NEW.TGCACHLY THEN
        RAISE EXCEPTION 'Thời gian cách ly không hợp lệ';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_check_quarantine_time
BEFORE INSERT OR UPDATE ON BENHNHAN
FOR EACH ROW
EXECUTE FUNCTION trg_check_quarantine_time();

--13. Trigger kiểm tra tồn tại DIACHI của CSYT
CREATE OR REPLACE FUNCTION trg_check_fk_DIACHI_CSYT_function()
RETURNS TRIGGER AS $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM KHUVUC WHERE MAKV = NEW.DIACHI) THEN
        RAISE EXCEPTION 'DIACHI không tồn tại';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_check_fk_DIACHI_CSYT
BEFORE INSERT OR UPDATE ON CSYT
FOR EACH ROW
EXECUTE FUNCTION trg_check_fk_DIACHI_CSYT_function();


--14. Trigger kiểm tra số lượng và tồn tại MACS của QLCSVCYTE
CREATE OR REPLACE FUNCTION trg_check_exists_MACS_and_valid_SL_function()
RETURNS TRIGGER AS $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM CSYT WHERE MACS = NEW.MACS) THEN
        RAISE EXCEPTION 'MACS không tồn tại';
    END IF;
    IF NEW.SL <= 0 THEN
        RAISE EXCEPTION 'Số lượng phải lớn hơn 0';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_check_exists_MACS_and_valid_SL
BEFORE INSERT OR UPDATE ON QLCSVCYTE
FOR EACH ROW
EXECUTE FUNCTION trg_check_exists_MACS_and_valid_SL_function();

--15. Trigger kiểm tra tồn tại QLCSVCYTE
CREATE OR REPLACE FUNCTION trg_exists_QLCSVCYTE_function()
RETURNS TRIGGER AS $$
BEGIN
    IF EXISTS (SELECT 1 FROM QLCSVCYTE WHERE MATHIETBI = NEW.MATHIETBI AND MACS = NEW.MACS) THEN
        RAISE EXCEPTION 'QLCSVCYTE đã tồn tại';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_exists_QLCSVCYTE
BEFORE INSERT ON QLCSVCYTE
FOR EACH ROW
EXECUTE FUNCTION trg_exists_QLCSVCYTE_function();

--16. Trigger kiểm tra khoá ngoại của CANBONV
CREATE OR REPLACE FUNCTION trg_check_fk_CANBONV_function()
RETURNS TRIGGER AS $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM CSYT WHERE MACS = NEW.DONVICT) THEN
        RAISE EXCEPTION 'DONVICT không tồn tại';
    END IF;
    IF NOT EXISTS (SELECT 1 FROM KHUCACHLY WHERE MAKHU = NEW.NOIHD) THEN
        RAISE EXCEPTION 'NOIHD không tồn tại';
    END IF;
    IF NOT EXISTS (SELECT 1 FROM CHUCVU WHERE MACV = NEW.MACV) THEN
        RAISE EXCEPTION 'MACV không tồn tại';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_check_fk_CANBONV
BEFORE INSERT OR UPDATE ON CANBONV
FOR EACH ROW 
EXECUTE FUNCTION trg_check_fk_CANBONV_function();

--17. Trigger kiểm tra khoá ngoại của BACSI
CREATE OR REPLACE FUNCTION trg_check_fk_BACSI_function()
RETURNS TRIGGER AS $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM CSYT WHERE MACS = NEW.DONVICT) THEN
        RAISE EXCEPTION 'DONVICT không tồn tại';
    END IF;
    IF NOT EXISTS (SELECT 1 FROM KHUCACHLY WHERE MAKHU = NEW.NOIHD) THEN
        RAISE EXCEPTION 'NOIHD không tồn tại';
    END IF;
    IF NOT EXISTS (SELECT 1 FROM KHOA WHERE MAKHOA = NEW.CHUYENKHOA) THEN
        RAISE EXCEPTION 'CHUYENKHOA không tồn tại';
    END IF;
    IF NOT EXISTS (SELECT 1 FROM CHUCVU WHERE MACV = NEW.MACV) THEN
        RAISE EXCEPTION 'MACV không tồn tại';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_check_fk_BACSI
BEFORE INSERT OR UPDATE ON BACSI
FOR EACH ROW
EXECUTE FUNCTION trg_check_fk_BACSI_function();

--18. Trigger kiểm tra khoá ngoại của BENHNHAN
CREATE OR REPLACE FUNCTION trg_check_fk_BENHNHAN_function()
RETURNS TRIGGER AS $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM KHUVUC WHERE MAKV = NEW.DIACHI) THEN
        RAISE EXCEPTION 'DIACHI không tồn tại';
    END IF;
    IF NOT EXISTS (SELECT 1 FROM KHUCACHLY WHERE MAKHU = NEW.MAKHU) THEN
        RAISE EXCEPTION 'MAKHU không tồn tại';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_check_fk_BENHNHAN
BEFORE INSERT OR UPDATE ON BENHNHAN
FOR EACH ROW
EXECUTE FUNCTION trg_check_fk_BENHNHAN_function();

--19. Trigger kiểm tra khoá ngoại của TNV
CREATE OR REPLACE FUNCTION trg_check_fk_TNV_function()
RETURNS TRIGGER AS $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM KHUCACHLY WHERE MAKHU = NEW.NOIHD) THEN
        RAISE EXCEPTION 'NOIHD không tồn tại';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_check_fk_TNV
BEFORE INSERT OR UPDATE ON TNV
FOR EACH ROW
EXECUTE FUNCTION trg_check_fk_TNV_function();

--20. Trigger kiểm tra NOIHD cùng khu vực với DONVICT của CANBONV
CREATE OR REPLACE FUNCTION trg_check_NOIHD_and_DONVICT_CANBONV_function()
RETURNS TRIGGER AS $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM KHUCACHLY
				   WHERE KHUCACHLY.MAKHU = NEW.NOIHD
				   AND NEW.DONVICT = KHUCACHLY.MACS ) THEN
        RAISE EXCEPTION 'NOIHD và DONVICT không cùng khu vực';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_check_NOIHD_and_DONVICT_CANBONV
BEFORE INSERT OR UPDATE ON CANBONV
FOR EACH ROW
EXECUTE FUNCTION trg_check_NOIHD_and_DONVICT_CANBONV_function();

--21. Trigger kiểm tra NOIHD cùng khu vực với DONVICT của BACSI
CREATE OR REPLACE FUNCTION trg_check_NOIHD_and_DONVICT_BACSI_function()
RETURNS TRIGGER AS $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM KHUCACHLY
				   WHERE KHUCACHLY.MAKHU = NEW.NOIHD
				   AND NEW.DONVICT = KHUCACHLY.MACS ) THEN
        RAISE EXCEPTION 'NOIHD và DONVICT không cùng khu vực';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_check_NOIHD_and_DONVICT_BACSI
BEFORE INSERT OR UPDATE ON BACSI
FOR EACH ROW
EXECUTE FUNCTION trg_check_NOIHD_and_DONVICT_BACSI_function();

--22. Trigger kiểm tra địa chỉ của khu cách ly có trùng với tỉnh của cơ sở y tế
CREATE OR REPLACE FUNCTION trg_check_DIACHI_CSYT_and_KHUCACHLY_function()
RETURNS TRIGGER AS $$
BEGIN
     IF NOT EXISTS (SELECT 1 FROM KHUVUC kv1
                    JOIN CSYT csyt ON csyt.DIACHI = kv1.MAKV
                    JOIN KHUVUC kv2 ON NEW.DIACHI = kv2.MAKV
                    WHERE kv1.TENTINH = kv2.TENTINH ) THEN
        RAISE EXCEPTION 'NOIHD và DONVICT không cùng khu vực';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_check_DIACHI_CSYT_and_KHUCACHLY
BEFORE INSERT OR UPDATE ON KHUCACHLY
FOR EACH ROW
EXECUTE FUNCTION trg_check_DIACHI_CSYT_and_KHUCACHLY_function();


--23. Trigger tự động tăng tổng số bệnh nhân của khu cách ly
CREATE OR REPLACE FUNCTION trg_update_khucachly_soluong_benhnhan_function()
RETURNS TRIGGER AS $$
BEGIN
    IF TG_OP = 'INSERT' THEN
        UPDATE KHUCACHLY
        SET SOLUONGBN = SOLUONGBN + 1
        WHERE NEW.MAKHU = MAKHU;

    ELSIF TG_OP = 'DELETE' THEN
        UPDATE KHUCACHLY
        SET SOLUONGBN = SOLUONGBN - 1
        WHERE OLD.MAKHU = MAKHU;

    ELSIF TG_OP = 'UPDATE' THEN
        IF NEW.MAKHU <> OLD.MAKHU THEN
            UPDATE KHUCACHLY
            SET SOLUONGBN = SOLUONGBN - 1
            WHERE OLD.MAKHU = MAKHU;
            
            UPDATE KHUCACHLY
            SET SOLUONGBN = SOLUONGBN + 1
            WHERE NEW.MAKHU = MAKHU;
        END IF;
    END IF;

    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_update_khucachly_soluong_benhnhan
AFTER INSERT OR UPDATE OR DELETE ON BENHNHAN
FOR EACH ROW
EXECUTE FUNCTION trg_update_khucachly_soluong_benhnhan_function();
